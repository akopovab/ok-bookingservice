openapi: 3.0.4
info:
  title: "Bookingservice ${VERSION_APP}"
  description: "This specs for meet"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: meet
    description: Запись на прием
paths:
  /meet/create:
    post:
      tags:
        - meet
      summary: Create meet
      operationId: meetCreate
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetCreateRequest'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetCreateRequest'
        required: true
  /meet/search:
    post:
      tags:
        - meet
      summary: Create meet
      operationId: meetSearch
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetCreateRequest'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetCreateRequest'
        required: true

components:
  schemas:
    IRequest:
      type: object
      description: Базовый интерфейс для всех запросов
      properties:
        requestType:
          type: string
          description: Поле дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/MeetCreateRequest'
          update: '#/components/schemas/MeetUpdateRequest'
          search: '#/components/schemas/MeetSearchRequest'
          delete: '#/components/schemas/MeetDeleteRequest'

    Error:
      type: object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    ResponseResult:
      type: string
      enum:
        - success
        - error

    IResponse:
      type: object
      description: Базовый интерфейс для всех ответов
      properties:
        responseType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
        result:
          $ref: '#/components/schemas/ResponseResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
      discriminator:
        propertyName: responseType
        mapping:
          create: '#/components/schemas/MeetCreateResponse'
          update: '#/components/schemas/MeetUpdateResponse'
          search: '#/components/schemas/MeetSearchResponse'
          delete: '#/components/schemas/MeetDeleteResponse'

    MeetId:
      type: string
      description: Идентификатор записи

    SlotList:
      type: object
      properties:
        slotId:
          type: array
          $ref: './spec-slot-v1.yaml/#/components/schemas/SlotId'

    BaseMeet:
      type: object
      description: Данные записи, которые пересекаются при создании записи и поиске
      properties:
        applicantFirstName:
          type: string
          description: Имя заявителя
        applicantSecondName:
          type: string
          description: Отчество заявителя
        applicantLastName:
          type: string
          description: Фамилия заявителя
        applicantEmail:
          type: string
          description: Электронный адрес заявителя
        applicantPhone:
          type: string
          description: номер телефона
        employeeId:
          $ref: './spec-employee-v1.yaml/#/components/schemas/EmployeeId'
        slots:
          $ref: '#/components/schemas/SlotList'


    MeetStatus:
      type: string
      description: Статус встречи
      enum:
        - CREATE
        - CONFIRMED
        - MEET_UNDONE
        - WITHDRAWN

    MeetCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          properties:
            meet:
              $ref: '#/components/schemas/BaseMeet'




    # STUBS ======================
    AdRequestDebugMode:
      type: string
      enum:
        - prod
        - test
        - stub

    AdRequestDebug:
      type: object
      properties:
        debug:
          $ref: '#/components/schemas/AdDebug'

    AdDebug:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AdRequestDebugMode'
        stub:
          $ref: '#/components/schemas/AdRequestDebugStubs'

    AdRequestDebugStubs:
      type: string
      description: Перечисления всех стабов
      enum:
        - success
        - notFound
        - badId
        - badTitle
        - badDescription
        - badVisibility
        - cannotDelete
        - badSearchString
