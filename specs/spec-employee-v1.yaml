openapi: 3.0.4
info:
  title: "Bookingservice ${VERSION_APP}"
  description: "This specs for employee"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: employee
    description: сотрудник
paths:
  /employee/create:
    post:
      tags:
        - employee
      summary: create employee
      operationId: createEmployee
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCreateResponse'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreateRequest'
        required: true
  /employee/delete:
    post:
      tags:
        - employee
      summary: delete employee
      operationId: deleteEmployee
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDeleteResponse'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDeleteRequest'
        required: true
  /employee/search:
    post:
      tags:
        - employee
      summary: search employee
      operationId: SearchEmployee
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeSearchResponse'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSearchRequest'
        required: true

components:
  schemas:

    IRequest:
      type: object
      description: Базовый интерфейс для всех запросов
      properties:
        requestType:
          type: string
          description: Поле дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/EmployeeCreateRequest'
          delete: '#/components/schemas/EmployeeDeleteRequest'
          search: '#/components/schemas/EmployeeSearchRequest'

    Error:
      type: object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    ResponseResult:
      type: string
      enum:
        - success
        - error
        -
    IResponse:
      type: object
      description: Базовый интерфейс для всех ответов
      properties:
        responseType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
        result:
          $ref: '#/components/schemas/ResponseResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
      discriminator:
        propertyName: responseType
        mapping:
          create: '#/components/schemas/EmployeeCreateResponse'
          delete: '#/components/schemas/EmployeeDeleteResponse'
          search: '#/components/schemas/EmployeeSearchResponse'

    EmployeeId:
      type: string
      description: Индентификатор сотрудника

    BaseEmployee:
      type: object
      description: общая информация для создания и поиска сотрудников
      properties:
        lastName:
          type: string
          description: фамилия сотрудника
        firstName:
          type: string
          description: имя сотрудника
        secondName:
          type: string
          description: отчество сотрудника
        workPhone:
          type: string
          description: номер телефона
        cabinetNum:
          type: string
          description: номер кабинета

    EmployeeResponseObject:
      allOf:
        - $ref: '#/components/schemas/BaseEmployee'
        - type: object
          description: объект, который отдаёт бэкенд
          properties:
            id:
              $ref: '#/components/schemas/EmployeeId'

    EmployeeRequestObject:
      type: object
      description: объект для запроса создания сотрудника
      properties:
          employee:
            $ref: '#/components/schemas/BaseEmployee'

    EmployeeIdObject:
      type: object
      description: объект, который отдаёт бэкенд
      properties:
        employeeId:
          $ref: '#/components/schemas/EmployeeId'

    EmployeeResponseMulti:
      allOf:
        - type: object
          description: Список сотрудников
          properties:
            employees:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeResponseObject'

    EmployeeCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/EmployeeRequestDebug'
        - $ref: '#/components/schemas/EmployeeRequestObject'

    EmployeeSearchRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/EmployeeRequestDebug'

    EmployeeDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/EmployeeRequestDebug'
        - $ref: '#/components/schemas/EmployeeIdObject'

    EmployeeCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/EmployeeIdObject'

    EmployeeDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'

    EmployeeSearchResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/EmployeeResponseMulti'


    # STUBS ======================
    EmployeeRequestDebugMode:
      type: string
      enum:
        - prod
        - test
        - stub

    EmployeeRequestDebug:
      type: object
      properties:
        debug:
          $ref: '#/components/schemas/EmployeeDebug'

    EmployeeDebug:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/EmployeeRequestDebugMode'
        stub:
          $ref: '#/components/schemas/EmployeeRequestDebugStubs'

    EmployeeRequestDebugStubs:
      type: string
      description: Перечисления всех стабов
      enum:
        - success
        - notFound
        - badId
        - cannotDelete
